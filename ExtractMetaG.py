import json
import argparse
import sys


parser = argparse.ArgumentParser(
    description='Extract required fasta from json by taxafinder.',
    add_help=False,
    usage='\n\nExtractMetaG -j [taxa.json] -r [required taxa] -o [output.fasta] -b [barcode for contig]\nExtractMetaG --json [taxa.json] --request [required taxa] --output [output.fasta] --barcode [barcode for contig]',
    epilog="\nThis program does not contain more info from taxafinder.")

parser.add_argument(
    '-j', '--json',
    metavar='[Input.json]',
    help='Input file, generated by taxafinder.',
    required=True,
    type=argparse.FileType('r'))
parser.add_argument(
    '-r', '--request',
    metavar='[Requested taxanomy]',
    help='Requested taxanomy.',
    required=True)
parser.add_argument(
    '-o', '--output',
    metavar='[Output.fasta]',
    help='Output file in fasta format.',
    required=True,
    type=argparse.FileType('w'))
parser.add_argument(
    '-b', '--barcode',
    metavar='[Barcode to identify the sequence if necessary]',
    help='A ID barcode added after the title of each contig.',
    required=False)

args = parser.parse_args()

parser.print_help()

t = json.load(args.json)

js = [i for i in t['profile'] if i[3] == args.request.replace('_', ' ')][0]

js_read = json.dumps(js[6])
barcode = args.barcode
out_file = js_read.replace(',', '\n').replace('": "', f'_{barcode}\n').replace(' "', '>').replace('{"', '>').replace(
    '}', '').replace('"', '')

args.output.write(out_file)
args.output.close()


